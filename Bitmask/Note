ধরুন আপনার কাছে এক সেট অবজেক্ট আছে। আপনি এই সকল অবজেক্ট এর কোন সাবসেটকে রিপ্রেসেন্ট করতে চান। অনেক ভাবেই করা যেতে পারে। ম্যপিং, বুলিয়ান অ্যারে ইত্যাদি ভাবে এই সমস্যার সমাধান করা সম্ভব তবে সবগুলো ক্ষেত্রেই অনেক মেমরি এবং সময় লাগবে। বিশেষ করে কম্পিটিটিভ প্রোগ্রামিং এর ক্ষেত্রে এটা কিন্তু অনেক বড় সমস্যা। যদি সেটটি খুব একটা বড় না হয় তবে এ সমস্যার সমাধান বিট্মাস্কের সাহায্যে করা সম্ভব।
আমরা জানি, কম্পিউটারে প্রতিটি ইন্টিজার কিছু বিটের সিকোয়েন্স বা স্ট্রিং রুপে সংরক্ষিত থাকে। সি/সি++/জাভার মত প্রোগ্রামিং ল্যঙ্গুয়েজে কিছু বিটওয়াইজ অপারেশনের সাহায্যে এই বিট সিকোয়েন্সকে ম্যনিপুলেট করা সম্ভব।
তাই যদি আমরা ধরে নেই কোন ইন্টিজারের বিট সিকোয়েন্সের প্রথম বিটটি আমাদের সেটের প্রথম অবজেক্টকে নির্দেশ করছে এবং দ্বিতীয় বিটটি দ্বিতীয় অবজেক্টকে নির্দেশ করছে এবং এভাবে পর পর বিটগুলি পর পর অবজেক্টগুলিকে নির্দেশ করছে এবং কোন বিট যদি ১ হয় তাহলে আমরা সংশ্লিষ্ট অবজেক্টটি নিব এবং কোন বিট যদি ০ হয় তবে আমরা সংশ্লিষ্ট অবজেক্টটি নিব না তাহলে আমরা যে কোন ইন্টিজার দিয়েই আমাদের সেটের কোন সাবসেটকে রিপ্রেসেন্ট করতে পারব।
যদি আমদের সেটটি এরকম হয়, {A,B,C,D}
তাহলে বিভিন্ন সাবসেটের নির্দেশক ইন্টিজার হবে অনেকটা এরকম,
১১০১ ={A,C,D}
১০০১ ={A,D}
১০১০ ={B,D}
[খেয়াল রাখতে হবে ১ম বিটটি সবসময় লিস্ট সিগনিফিক্যন্ট বিট]
এখন আমরা দেখব বিটওয়াইজ অপারেটরের সাহায্যে কিভাবে কোন ইন্টিজারের বিট সিকোয়েন্সকে ম্যনিপুলেট করা যায়।
১। কোন বিটকে অন করাঃ
To turn on jth bit:
msk|=(1<<j);
২। কোন বিটকে অফ করাঃ
To turn off jth bit:
msk&=~(1<<j);
৩। কোন বিটকে চেক করাঃ
To check the jth bit:
T=msk&(1<<j);
if T is true then jth bit is on else, jth bit is off.
৪। কোন বিটকে টোগল করাঃ
To toggle the jth bit:
msk^=(1<<j);
৫। সর্বনিম্ন স্থানীয় মান বিশিষ্ট যে বিটটি অন তা বের করাঃ
z=(msk&-msk);
৬। প্রথম n টি বিট অন করাঃ
msk=(1<<n)-1;
৭। কোন সেটের সকল সাবসেট নির্ণয়ঃ
for(msk=0;msk<(1<<n);msk++)
৮। কোন সাবসেট y এর সকল সাবসেট নির্ণয়ঃ
for(msk=y;msk;msk=(y&(msk-1)))
